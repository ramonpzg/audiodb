stages:
  train_cls:
    cmd: python src/train.py
    outs:
    - data/processed
    - models/my_model
  hidden_state:
    cmd: python src/get_hidden_state.py
    deps:
    - data/processed
    - models/my_model
    outs:
    - data/hidden_state/vectors_full.npy
  get_paths:
    cmd: python src/utils.py
    deps:
    - data/processed
    outs:
    - data/external/paths.parquet
  get_payloads:
    cmd: python src/build_payload.py
    deps:
    - data/processed
    - data/external/paths.parquet
    outs:
    - data/payloads/payload.json
  # get_image:
  #   cmd: docker pull qdrant/qdrant && echo "finished pulling image" >> msg.txt
  #   deps:
  #   - data/payloads/payload.json
  #   outs:
  #   - msg.txt
  # start_image:
  #   cmd: docker run -dp 6333:6333 -v $(pwd)/qdrant_storage:/qdrant/storage qdrant/qdrant
  #   deps:
  #   - msg.txt
  #   outs:
  #   - qdrant_storage
  load_vdb:
    cmd: python src/load_qdrant.py && echo "finished adding data to qdrant" >> msg.txt
    deps:
    - qdrant_storage
    - data/hidden_state/vectors_full.npy
    - data/payloads/payload.json
    outs:
    - msg.txt
  start_ui:
    cmd: streamlit run src/app.py
    deps:
    - msg.txt
    - data/payloads/payload.json
    - models/my_model
    - qdrant_storage